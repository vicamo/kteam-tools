#!/usr/bin/python3
#
# cves-git-tags-order
#
from __future__ import print_function

import sys
import os
import re

from subprocess     import Popen, PIPE

cache = sys.argv[1]
versions = sys.argv[2:]

# Find the date of the release pointed to by this tag
def tag_date(tag):
    cmd = [ 'git', 'log', '-1', '--format=format:%ct', tag ]
    return Popen(cmd, stdout=PIPE, text=True).communicate()[0]


def cache_load(cachef):
    data = {}
    try:
        with open(cachef) as cfd:
            for line in cfd:
                bits = line.strip().split()
                data[bits[0]] = bits[1:]
    except IOError:
        pass

    return data


def cache_add(cachef, key, data):
    with open(cachef, 'a+') as cfd:
        print(key + ' ' + ' '.join(data), file=cfd)


def git_tag_dates(cachef):
    cache_data = cache_load(cachef)

    tags_date = {}

    cmd = [ 'git', 'for-each-ref', 'refs/tags' ]
    p = Popen(cmd, stdout=PIPE)
    for line in p.stdout:
        line = line.decode('utf-8')
        (sha1, what, tag) = line.strip().split()
        tag_name = tag.split('/', 2)[2]

        if sha1 not in cache_data:
            date = tag_date(tag_name)
            if not date:
                date = '0'
            cache_data[sha1] = (tag_name, date)
            cache_add(cachef, sha1, cache_data[sha1])

        tags_date[tag_name] = cache_data[sha1][1]

    p.terminate()
    return tags_date


cachef = os.path.join(cache, 'cves-git-tags-order.cache')

# Get a list of valid tags and their shas
tags_date = git_tag_dates(cachef)

# Find the list of tags for each version
tags_ts = []
for (tag, version) in zip(versions[::2], versions[1::2]):
    tags_ts.append((tags_date[tag], tag, version))
tags_ts.sort()
tags = [ (tag_name, tag_version) for tag_ts, tag_name, tag_version in tags_ts ]

for (tag_name, tag_version) in tags:
    print(tag_name + " " + tag_version)
