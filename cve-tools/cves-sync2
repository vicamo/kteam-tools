#!/bin/bash

here=`dirname $0`
case "$here" in
/*) ;;
*)  here="`pwd`/$here" ;;
esac

repos="$HOME/cve-autotriage"

work="$1"
cache="$2"
overlay="$3"
cve_list="$4"

case "$overlay" in
/*) ;;
*)  overlay="`pwd`/$overlay" ;;
esac
shift

tag_cache="$cache/tag"
lp_cache="$cache/lp"
mkdir -p "$tag_cache" "$lp_cache"

cve_list_cache="$cache/CVE-list"
cves_changed=1

overlay_cache="$cache/overlay"
overlay_changed=1

ancestor_cache="$cache/flag.ancestor"

branch_id="/tmp/cve-branch.$$"

{
	# Check if the list of CVEs have changed.
	if [ -f "$cve_list_cache" ]; then
		if cmp -s "$cve_list_cache" "$cve_list"; then
			cves_changed=0
			echo "NOTE: CVE list unchanged" 1>&2
		fi
	fi
	if [ ! -f "$cache/tagid.db" ]; then
		echo "NOTE: core db reset -- faking CVE list change" 1>&2
		cves_changed=1
	fi
	if [ "$cves_changed" = 1 ]; then
		echo "NOTE: CVE list changed" 1>&2
	fi

	# Check if the overlays have changed.
	if [ -f "$overlay_cache" ]; then
		if cmp -s "$overlay_cache" "$overlay"; then
			overlay_changed=0
			echo "NOTE: overlay unchanged" 1>&2
		fi
	fi
	if [ "$overlay_changed" = 1 ]; then
		echo "NOTE: overlay changed" 1>&2
		"$here/cves-applied2" "$cache/tagid.db" 'rescan-overlay' "$overlay"
		cp -p "$overlay" "$overlay_cache"
	fi

	while read series cvebranch repo branch flags X
	do
		case ",$flags," in
		*,scan,*)		;;
		*)			continue;;
		esac

		series_file="${series//\//@}"

		tags_git=",${flags},"
		tags_git="${tags_git#*,tags-git:}"
		tags_git="${tags_git%%,*}"

		case ",${flags}," in
		*,tags-lp,*)	tags_lp=1 ;;
		*)		tags_lp=0 ;;
		esac

		echo "*** checking $series $cvebranch ... " 1>&2
		(
			cd "$repos/$repo" || exit 1
			if [ "$tags_git" != '' ]; then
				tag_list=$("$here/cves-git-tags-order" "$tag_cache" \
					`git tag -l "$tags_git" | grep -v v2.6.11 | \
						awk '{
							x=$1;
							sub("^.*/", "", x);
							sub("^v", "", x);
							gsub("-rc", "~rc", x);
							print $1 " " x
						}'
					`
				)

			elif [ "$tags_lp" -eq 1 ]; then
				tag_list=`"$here/cves-git-tags-versions" tags "$tag_cache" "$cvebranch" $("$here/cves-kernel-versions-lookup" "$lp_cache" "tags" "$series" "$cvebranch")`
			else
				echo "WARNING: no versions specified" 1>&2
			fi

			{
				git show "$branch" | head -1
				echo "$tag_list"
			} >"$branch_id"
			state="$cache/$series_file-$cvebranch--$repo-$branch"
			touch "$state.live"
			if [ -f "$state" ] && cmp -s "$state" "$branch_id"; then
				branch_changed=0
				echo "NOTE: $series $cvebranch unchanged" 1>&2
			else
				branch_changed=1
				echo "NOTE: $series $cvebranch changed" 1>&2
			fi

			if [ "$cves_changed" = 1 -o "$branch_changed" = 1 -o "$overlay_changed" = 1 ]; then
				why=''
				[ "$cves_changed" = 1 ] && why="${why}CVEs "
				[ "$overlay_changed" = 1 ] && why="${why}overlay "
				[ "$branch_changed" = 1 ] && why="${why}branch "
				echo "NOTE: $series $cvebranch rescan (${why}changed)" 1>&2
				echo "$here/cves-applied2" "$cache/tagid.db" 'rescan' \
					"$overlay" "$series" "$cvebranch" \
					$tag_list "$branch" "pending" >"$state+rescan"
				"$here/cves-applied2" <"$cve_list" "$cache/tagid.db" 'rescan' \
					"$overlay" "$series" "$cvebranch" \
					$tag_list "$branch" "pending" | \
					tee "$state+cache"

				mv "$branch_id" "$state"
			else
				cat "$state+cache"
			fi
		)
	done <"$work"
}

rm -f "$branch_id" "$ancestor_cache"
