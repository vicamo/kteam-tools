#!/bin/bash

shopt -s extglob

here=`dirname $0`
case "$here" in
/*) ;;
*)  here="`pwd`/$here" ;;
esac

if [ "$#" -lt 3 ]; then
	echo "Usage: $0 <config> <state> <devel release> <cves>" 1>&2
	exit 1
fi
config="$1"
state="$2"
devel="$3"
shift 3

lp_cache="$state/lp"

while read series cvebranch repo branch flags X
do
	case ",$flags," in
	*,mark-pockets,*)	;;
	*)			continue ;;
	esac

	supported=1
	case ",$flags," in
	*,unsupported,*)	supported=0 ;;
	*,no-usn,*)		supported=0 ;;
	esac

	echo "$series $cvebranch (supported=$supported) ..." 1>&2

	versions=`"$here/cves-kernel-versions-lookup" "$lp_cache" "cve-pockets" "$series" "$cvebranch"`
	release_version="${versions%% *}"; versions="${versions#* }"
	security_version="${versions%% *}"; versions="${versions#* }"
	updates_version="${versions%% *}"; versions="${versions#* }"
	proposed_version="${versions%% *}"; versions="${versions#* }"
	ppa_version="${versions}"

	echo "$series $cvebranch (release=$release_version security=$security_version updates=$updates_version proposed=$proposed_version ppa=$ppa_version series=$series) ..." 1>&2

	if [ "$series" = "$devel" ]; then
		series="devel"
	fi

	egrep -H "^${series}_${cvebranch}: *pending *\(" "$@" |\
	while IFS=: read cve series_branch state
	do
		#echo ">$cve< >$series_branch< >$state<"
		version=`echo "$state" | sed -e 's/.*(//' -e 's/)//'`
		# If there is no version in release/security/updates then this must be the 'first'.
		if [ "$release_version" = "None" -a "$security_version" = "None" -a "$updates_version" = "None" ]; then
			replace="not-affected"
		elif [ "$release_version" != "None" ] && \
				dpkg --compare-versions "$version" le "$release_version"; then
			replace="not-affected"
		elif [ "$supported" -eq 1 ]; then
			continue
		elif [ "$updates_version" != "None" ] && \
				dpkg --compare-versions "$version" le "$updates_version"; then
			replace="released"
		else
			continue
		fi

		notes="${state%% }"		# string surrounding whitespace
		notes="${notes## }"
		state="${notes%% *}"		# pull off the existing state
		notes="${notes#* }"
		notes="${notes:1:-1}"		# drop the surrounding whitespace
		echo "$cve $series $cvebranch - $replace $notes"
	done
done <"$config"
