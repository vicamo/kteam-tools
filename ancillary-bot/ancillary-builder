#!/bin/bash

if [ "$#" -ne 1 -a "$#" -ne 2 ]; then
	echo "Usage: $0 <build-ppa> [<ps-ppa>]" 1>&2
	exit 1
fi
if [ "$#" -eq 1 ]; then
	set - "$1" "$1-ps"
fi
ppa="$1"
ppa_ps="$2"

here=$(dirname $(readlink -f "$0"))

"$here/ancillary-lookup" "$ppa" "$ppa_ps" | \
while read id source urls
do
	if [ "$urls" = '-' ]; then
		if [ -d "$id" ]; then
			echo "$id: in -ps"
			rm -rf "$id"
		fi
		continue
	fi

	if [ -d "$id" ]; then
		if [ ! -f $source-*/debian/scripts/gen-rules.lrm ]; then
			echo "$id: ignored (v3)"
			continue
		fi
		(
			cd "$id" || exit 1
			# If the uploads failed, the we should retry them periodically.
			for changes in *_source.changes
			do
				dput ${ANCILLARY_DPUTCF:+-c $ANCILLARY_DPUTCF} "$ppa_ps" "$changes"
			done
		) || exit "$?"
		echo "$id: complete"
		continue
	fi

	echo "$id: needed"
	mkdir "$id" || exit 1
	(
		cd "$id" || exit 1

		echo "$id: downloading source ..."
		for url in $urls
		do
			wget $url
		done
		echo "$id: extracting source ..."
		dpkg-source -x $source*.dsc

		# Confirm this is the appropriate form.
		if [ ! -f $source-*/debian/scripts/gen-rules.lrm ]; then
			echo "$id: not LRMv4 form, ignored"
			exit 0
		fi
		(
			cd $source-* || exit 2

			echo "$is: building linux-restricted-generate ..."
			sed -i -e '1s/linux-restricted-modules/linux-restricted-generate/' debian/changelog
			debian/rules clean
			dpkg-buildpackage --no-sign -nc -S

			echo "$is: building linux-restricted-signatures ..."
			sed -i -e '1s/linux-restricted-generate/linux-restricted-signatures/' debian/changelog
			debian/rules clean
			dpkg-buildpackage --no-sign -nc -S
		) || exit "$?"

		echo "$i: signing uploads ..."
		debsign ${ANCILLARY_KEYID:+-k $ANCILLARY_KEYID} *_source.changes

		echo "$i: uploading ..."
		dput ${ANCILLARY_DPUTCF:+-c $ANCILLARY_DPUTCF} "$ppa_ps" *_source.changes
	) || exit "$?"
done
