#!/bin/bash

here=`dirname $0`
case "$here" in
/*) ;;
*)  here="`pwd`/$here" ;;
esac

# Flags
first=false
[ "$1" = "first" ] && first=true

bodge_many_refs()
{
	local url="$1"
	local alt_url="$2"

	local tmp="/tmp/bodge-many-refs.$$"
	git ls-remote "$alt_url" >"$tmp"
	(
		cd "$repo" || exit 1
		git for-each-ref | \
		while read sha type ref
		do
			count=$(grep -c "	$ref$" "$tmp")
			if [ "$count" -eq 0 ]; then
				echo "$ref:$ref"
			fi
		done | xargs --max-args 20 --no-run-if-empty | \
		while read refs
		do
			echo "$refs"
			git push --no-tags "$alt_url" $refs
		done
	)
	rm -f "$tmp"
}

# MIRROR wani -> launchpad
while read url alt_url master flags
do
    case ",$flags," in
    *,inactive,*)	continue ;;
    esac
    case "$master" in
    wani) 		;;
    *)			continue ;;
    esac
    case "$alt_url" in
    -)			continue ;;
    esac

    echo "*** $url -> $alt_url ..."
    repo=$( echo "$url" | sed -e 's@git://kernel.ubuntu.com/@/srv/kernel.ubuntu.com/git/@' )
    #alt_url=$( echo "$alt_url" | sed -e 's_git://git.launchpad.net/_git+ssh://kernel-ppa@git.launchpad.net/_' )

    case "$url" in
    */virgin/testing/crack.git)
        bodge_many_refs "$repo" "$alt_url"
        ;;
    *)
        (cd "$repo" && git push --mirror "$alt_url")
        ;;
    esac
done <"$here/../info/repositories.txt"

# MIRROR launchpad -> wani
while read url alt_url master flags
do
    case ",$flags," in
    *,inactive,*)	continue ;;
    esac
    case "$master" in
    launchpad) 		;;
    *)			continue ;;
    esac
    case "$alt_url" in
    -)			continue ;;
    esac

    echo "*** $alt_url -> $url ..."
    repo=$( echo "$url" | sed -e 's@git://kernel.ubuntu.com/ubuntu/@/srv/kernel.ubuntu.com/git/kernel-ppa/.mirror/@')

    if [ ! -d "$repo" ]; then
	(
		mkdir "$repo" || exit 1
		git init --bare "$repo"
		cp "$repo/hooks/post-update.sample" "$repo/hooks/post-update"
	)
    fi
    (cd "$repo" && \
        git fetch "$alt_url" '+refs/heads/*:refs/heads/*' '+refs/tags/*:refs/tags/*')
done <"$here/../info/repositories.txt"

# MIRROR launchpad -> wani things in kernel-series
"$here/kta-config" repositories | \
while read series package name url type
do
    echo "*** $series $package $url -> $name"
    repo="/srv/kernel.ubuntu.com/git/kernel-ppa/.mirror/$name"

    if [ ! -d "$repo" ]; then
	(
	    mkdir "$repo" || exit 1
	    git init --bare "$repo"
	    cp "$repo/hooks/post-update.sample" "$repo/hooks/post-update"
	)
    fi
    (cd "$repo" && \
        git fetch "$url" '+refs/heads/*:refs/heads/*' '+refs/tags/*:refs/tags/*')
done

date
