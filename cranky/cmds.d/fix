#!/bin/bash
#
# cranky fix -- identify the current repository and attempt to apply fixes to
#               it against the primary copies of repositories.
#

function usage()
{
	cat - 1>&2 <<EOM
Usage: $0 [-h] [-v]

cranky fix -- fix various common files from kteam-tools for main packages, and
              sync those between main and subsiduary packages.

options:
  -h, --help      show this help message and exit
  -v, --verbose   show extra info when running.
  --cycle         Work against a specific cycle, defaults to the tree cycle
                  when handle is a directory and the tip otherwise.

EOM
	exit 1
}

verbose=0
cycle=

while [ "$#" -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			;;
		-v|--verbose)
			verbose=1
			;;
		--cycle)
			shift
			cycle="$1"
			;;
		*)
			echo "error: Unrecognized argument ${1}" >&2
			usage
			;;
	esac
	shift
done

# Locate the debian directory taking into accout debian.env if present.
debian="debian"
if [ -f "debian/debian.env" ]; then
	debian=$(awk -F= '($1 == "DEBIAN") { print $2 }' <debian/debian.env)
fi
# Idenfify the tree package type.
type=$("$C" shell-helper tree-type .)
if [ "$type" = "" ]; then
	echo "$0: unable to identify repository type -- assuming other" 1>&2
	type='other'
fi
# identify the current package/series
source=$(dpkg-parsechangelog -l"$debian/changelog" -SSource)
series=$(dpkg-parsechangelog -l"$debian/changelog" -SDistribution)
if [ "$series" = "UNRELEASED" ]; then
	series=$(dpkg-parsechangelog -l"$debian/changelog" -c1 -SDistribution)
fi

main_path=""
if [ "$type" != 'main' ]; then
	main_path=$("$C" shell-helper tree-main-path .)
	if [ "$main_path" = '' ]; then
		exit 1
	fi
fi

if ! variants=$("$C" shell-helper list-variants .); then
       echo "cranky shell-helper failed"
       exit 1
fi

cranky_root=$(dirname "$C")

bug="1786013"
FIX_VERBOSE="${verbose}" \
FIX_BUG="$bug" \
FIX_BUGLINK="BugLink: https://bugs.launchpad.net/bugs" \
FIX_MASTER="$cranky_root/master" \
FIX_MAIN_PATH="$main_path" \
FIX_DEBIAN="$debian" \
FIX_TYPE="$type" \
FIX_SERIES="$series" \
FIX_SOURCE="$source" \
FIX_VARIANTS="$variants" \
FIX_CYCLE="$cycle" \
	run-parts --regex '\.fix$' --exit-on-error --verbose "$cranky_root/fixes.d"
