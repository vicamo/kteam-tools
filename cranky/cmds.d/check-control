#!/bin/bash -eu
#
# debian/control sanity checks
#

C=${C:-cranky}
SC=$(basename "${0}")

function out()
{
	rc=${?}

	trap - EXIT INT TERM HUP

	if [ ${rc} -ne 0 ] ; then
		echo "Error: ${C} ${SC} failed" >&2
	fi

	exit ${rc}
}


function must_produce()
{
	local package=${1} note=${2:-}

	if ! grep -qP "^Package:\s*${package}$" debian/control ; then
		echo "EE: debian/control is missing package stanza${note}:" >&2
		echo "Package: ${package}" >&2
		RC=1
	fi
}

function must_not_produce()
{
	local package=${1} note=${2:-}

	if grep -qP "^Package:\s*${package}$" debian/control ; then
		echo "EE: debian/control contains invalid package stanza${note}:" >&2
		echo "Package: ${package}" >&2
		RC=1
	fi
}

function check_linux_source()
{
	echo "  - Check linux-source package stanza"

	if [ "${SOURCE}" = "linux" ] ; then
		must_produce "linux-source-\d+\.\d+\.\d+"
	else
		must_not_produce "linux-source-\d+\.\d+\.\d+"
		must_not_produce "${SOURCE}-source-\d+\.\d+\.\d+"
	fi
}

function check_linux_tools()
{
	local note

	echo "  - Check linux-*-tools-common and linux-*-tools-host package stanzas"

	note=" (see LP: #2048183)"

	if [ "${SOURCE}" = "linux" ] ; then
		must_produce "linux-tools-common" "${note}"
		must_produce "linux-cloud-tools-common" "${note}"
		must_produce "linux-tools-host" "${note}"
	else
		must_not_produce "linux-tools-common" "${note}"
		must_not_produce "${SOURCE}-tools-common" "${note}"

		must_not_produce "linux-cloud-tools-common" "${note}"
		must_not_produce "${SOURCE}-cloud-tools-common" "${note}"

		must_not_produce "linux-tools-host" "${note}"
		must_not_produce "${SOURCE}-tools-host" "${note}"
	fi
}

function usage()
{
    cat << EOF
Usage: ${C} ${SC} [-h]

Check debian/control for missing or invalid package stanzas.

Optional arguments:
  -h, --help  Show this help message and exit.
EOF
}

while [ ${#} -ne 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		*)
			usage
			exit 2
			;;
	esac
	# shellcheck disable=SC2317
	shift
done

trap out EXIT INT TERM HUP

if ! [ -e debian/debian.env ] ; then
	echo "Not in an Ubuntu kernel package tree" >&2
	exit 1
fi

if ! [ -e debian/control ] ; then
	echo "debian/control does not exist" >&2
	exit 1
fi

# shellcheck disable=SC1091
. debian/debian.env

SOURCE=$(dpkg-parsechangelog -l"${DEBIAN}"/changelog -SSource)

RC=0

echo "Check debian/control"
check_linux_source
check_linux_tools

if [ ${RC} -ne 0 ] ; then
	echo "EE: Some checks failed" >&2
	exit 1
fi

echo "All checks passed"
exit 0
