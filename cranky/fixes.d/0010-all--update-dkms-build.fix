#!/bin/bash

# shellcheck source=./cranky/fixes.d/lib.sh
. "$(dirname "$0")"/lib.sh

control=''
case "$FIX_TYPE" in
main)
	. debian/debian.env
	control="$DEBIAN/control.stub.in"
	;;
lrm)
	for control in "debian/control.stub" "debian/control.common" ""
	do
		[ -f "$control" ] && break
	done
	;;
*)
	fix_verbose "$FIX_TYPE does not consume dkms-build"
	exit 0
	;;
esac

resync_batch_start

case "$FIX_TYPE" in
main)
	;;
*)
	# update dkms-build components as found in the main package.
	for file in debian/scripts/dkms-build debian/scripts/file-downloader debian/scripts/dkms-build--nvidia-N debian/scripts/fix-filenames.c
	do
		resync_batch_main_sync "$file"
	done
	;;
esac

# Check and fix the dkms/wget/curl dependencies.
if [ -f "debian/scripts/dkms-build" ] && [ -n "$control" ]; then
	seen=$(grep -Ec "[:, ]dkms(,| |\$)" "$control")
	if [ "$seen" = 0 ]; then
		"$(dirname "$0")/helpers/dependency-mangler" add "$control" 'Source' 'Build-Depends' "dkms <!stage1>"
		resync_batch_changed "$control"
	fi
	if [ -f "debian/scripts/file-downloader" ]; then
		dont="wget"
		want="curl"
	else
		dont="curl"
		want="wget"
	fi
	fix_verbose "checking removal of Build-Depends: $dont"
	seen=$(grep -Ec "[:, ]$dont(,| |\$)" "$control")
	if [ "$seen" != 0 ]; then
		"$(dirname "$0")/helpers/dependency-mangler" remove "$control" 'Source' 'Build-Depends' "$dont <!stage1>"
		resync_batch_changed "$control"
	fi
	fix_verbose "checking addition of Build-Depends: $want"
	seen=$(grep -Ec "[:, ]$want(,| |\$)" "$control")
	if [ "$seen" = 0 ]; then
		"$(dirname "$0")/helpers/dependency-mangler" add "$control" 'Source' 'Build-Depends' "$want <!stage1>"
		resync_batch_changed "$control"
	fi
fi

resync_batch_commit "UBUNTU: [Packaging] resync dkms-build and family"

exit 0
