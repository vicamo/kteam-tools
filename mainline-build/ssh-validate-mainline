#!/bin/bash
P="ssh-validate"

who="$1"

#echo "$SSH_ORIGINAL_COMMAND" 1>&2

# Belt and braces
case "$SSH_ORIGINAL_COMMAND" in
*[\;\|\<\>]*)
	echo "$P: invalid command" 1>&2
	exit 1
	;;
esac

log="$HOME/logs/cod-queue-worker.log"

case "$SSH_ORIGINAL_COMMAND" in
"rsync --server -vlogDtpre.iLsfx . mainline-builds/incoming/"|\
"rsync --server -vlogDtpre.iLsf . mainline-builds/incoming/"|\
"rsync --server -vlogDtpre.iLsfx --remove-source-files . mainline-builds/incoming/"|\
"rsync --server -vlogDtpre.iLsfxC --remove-source-files . mainline-builds/incoming/"|\
"rsync --server -vlogDtpre.iLsfxCIvu --remove-source-files . mainline-builds/incoming/")
	incoming="$HOME/incoming"
	lock="$incoming/.LOCK"

	mkdir -p "$incoming"

	# Locking: see cod-incoming-publish for details.
	echo "LL: $$ aquiring shared lock" >>"$log"

	exec 8>>"$lock-A" 9>>"$lock-B"
	flock --verbose --exclusive 8 >>"$log" || exit 1
	flock --verbose --shared 9 >>"$log" || exit 1
	flock --unlock 8 || exit 1

	echo "LL: $$ aquired shared lock" >>"$log"

	# Perform the sync ...
	$SSH_ORIGINAL_COMMAND

	echo "LL: $$ releasing shared lock" >>"$log"
	flock --unlock 9 || exit 1
	;;
"queue pick mainline")
	exec "$HOME/kteam-tools/queue/queue" -w "mainline-$who" pick mainline
	;;
"queue complete")
	exec "$HOME/kteam-tools/queue/queue" -w "mainline-$who" complete
	;;
"dashboard-status")
    "$HOME/kteam-tools/dashboard/dashboard-status-receive" "$who"
    ;;
"test")
	echo "SUCCESSFUL LOGIN"
	;;
*)
	echo "$P: invalid command $SSH_ORIGINAL_COMMAND" 1>&2
	exit 1
esac
