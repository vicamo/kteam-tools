#!/bin/bash
P="cod-tags-trigger"

#set -e

here=`dirname $0`
case "$here" in
/*) ;;
*)  here="`pwd`/$here" ;;
esac

commit="$1"

. "$here/lib-build"

master_tags="$master_state/upstream"
tags_list="$master_tags/TAGS"

# Ensure our master state exists.
mkdir -p "$master_tags"

# We are going to use the master linux build tree.
master_tree_select

# Pull in all trees containing tags we wish to build.
remotes="linus linux-stable extended-stable crack-extra"
repo_remote_update_list $remotes

# Work out where we are going to push the tags et al to.
repo_remote_url "crack-push"; push_url="$RET"

# Keep the master branch in the crack repository up to date.
git push "$push_url" "linus/master:master"

#
# UPSTREAM TAGS: Find all the new upstream release tags.
#
git tag -l >"$tags_list.new"
if [ ! -f "$tags_list" ]; then
	cp -p "$tags_list.new" "$tags_list"
fi

diff "$tags_list" "$tags_list.new" | \
	awk '/>/ && $2 ~ /^v/ { print $2 }' | tac >"$tags_list.added"

# Commit the list.
mv "$tags_list.new" "$tags_list"

live_version_tags_pattern
pattern="$RET"
dev_version_tags_pattern
pattern_dev="$RET"

# Run the list.
while read commit
do
	# Note if this fails the job will fail, but it is better that the job
        # is created and logged so we can rerun it rather than never knowing
        # about it.
        git push "$push_url" tag "$commit"

	#"$here/cod-enqueue" "mainline-build" "crack" "$commit"
	"$here/cod-enqueue" "--priority" "medium" -- "cod-mainline-core" "--priority" "medium" "crack" "$commit" "mainline/$commit"

	# Check this against the live versions, announce if new in those series.
	eval 'case "$commit" in '"$pattern"') match=1;; *) match=0;; esac'
	eval 'case "$commit" in '"$pattern_dev"') match_dev=1;; *) match_dev=0;; esac'
	if [ "$match" -eq 1 ]; then
		"$here/../bin/announce" upstream-stable "Prepare Upstream Stable $commit" \
			"Upstream Stable $commit has been released."
	elif [ "$match_dev" -eq 1 ]; then
		"$here/../bin/announce" upstream-devel "Prepare Upstream Stable $commit" \
			"Upstream Stable $commit has been released."
	fi
done <"$tags_list.added"

rm -f "$tags_list.added"
