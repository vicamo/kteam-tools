#!/usr/bin/python2
from __future__ import print_function

import json
import os
import sys
from urllib import quote

import yaml

directory = sys.argv[1]

section = None
section_path = os.path.curdir
for relative in (os.path.curdir, os.path.pardir,
        os.path.join(os.path.pardir, os.path.pardir),
        os.path.join(os.path.pardir, os.path.pardir, os.path.pardir)):
    section_path = os.path.join(directory, relative, 'section.yaml')
    if os.path.exists(section_path):
        with open(section_path) as sfd:
            section = yaml.safe_load(sfd)
            break

results = []
for (dirname, dirs, files) in os.walk(directory):
    if 'latest.json' not in files:
        continue

    with open(os.path.join(dirname, 'latest.json')) as entry_fd:
        entry = json.load(entry_fd)
    entry['_path'] = os.path.relpath(os.path.abspath(os.path.join(directory, dirname)), os.path.abspath(os.path.dirname(section_path)))

    results.append(entry)

results.sort(key=lambda x: x['series'] + ' ' + x.get('package', x.get('commit', 'Unknown')))

html = os.path.join(directory, "index.html.new")

with open(html, "w") as html_fd:
    print('''<html>
<head>
<title>{title} Summary</title>
<style>
.GOOD {{ background-color: green; }}
.WARN {{ background-color: yellow; }}
.FAIL {{ background-color: red; }}
.UBUNTU {{ background-color: #FFFF99; }}
table.matrix {{
    border-collapse: collapse;
}}
table.matrix th {{
    text-align: left;
    padding-left: 5px;
    padding-right: 5px;
}}
table.matrix td {{
    text-align: left;
    padding-left: 5px;
    padding-right: 5px;
}}
#table.matrix, table.matrix th, table.matrix td {{
#   border: 1px solid black;
#}}
#.row:nth-child(6n+1) {{ background-color: darkgrey }}
#.row:nth-child(6n+2) {{ background-color: darkgrey }}
#.row:nth-child(6n+3) {{ background-color: darkgrey }}
.row:nth-child(even) {{ background-color: lightgrey }}

</style>
</head>
<body>
<h1>{title} Summary</h1>
<table class="matrix">
<tr><th>{unit-title}<th>Title<th>Progress<th>Status'''.format(**section), file=html_fd)
    for entry in results:
        row_class = 'row'
        #if entry['id'].startswith('Ubuntu-'):
        #    row_class = 'UBUNTU'

        status = entry['overall']
        if status == 'in-progress':
            status_string = 'IN-PROGRESS'
            status_class = 'WARN'
        elif status == 'succeeded':
            status_string = 'GOOD'
            status_class = 'GOOD'
        elif status == 'failed':
            status_string = 'FAIL'
            status_class = 'FAIL'
            for test, test_data in entry.get('tests', {}).items():
                if test_data.get('status-rc', 0) != 0:
                    status_string = "TEST {} rc={}".format(test, test_data['status-rc'])
                    break
        elif status == '0':
            status_string = 'GOOD'
            status_class = 'GOOD'
        else:
            status_string = 'FAIL rc=' + str(status)
            status_class = 'FAIL'

        progress_total = '-'
        progress_done = '-'
        if 'testsets' in entry:
            progress_total = len(entry['testsets'])
            if 'tests' in entry:
                progress_done = progress_total
                for test, test_data in entry['tests'].items():
                    if test_data['status'] == 'missing':
                        progress_done -= 1
        progress = "{}/{}".format(progress_done, progress_total)

        commit_url = section.get('repo', '').format(**entry)
        path = os.path.join(entry['_path'], entry['directory'])
        thing = entry['_path']
        id = entry.get('commit-label', entry.get('commit', 'Unknown'))
        print('<tr class="{row_class}"><td><a href="{thing_url}">{thing}</a><td><a href="{commit_url}">{id}</a> -- {commit-title}<td>{progress}<td class="{status_class}"><a href="{status_url}">{status_string}</a>'.format(
            commit_url=commit_url,
            status_string=status_string,
            status_class=status_class,
            status_url=quote(path),
            progress=progress,
            thing=thing,
            thing_url=quote(thing),
            id=id,
            row_class=row_class,
            **entry
            ), file=html_fd)
    print('''</table>
<body>
</html>''', file=html_fd)
