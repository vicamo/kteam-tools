#!/bin/bash
P="cod-ubuntu-config-trigger"

#set -e

here=`dirname $0`
case "$here" in
/*) ;;
*)  here="`pwd`/$here" ;;
esac

. "$here/lib-build" 

master_tags="$master_state/ubuntu"
tags_list="$master_tags/release-tags"

# Ensure our master state exists.
mkdir -p "$master_tags"

#
# UBUNTU TAGS: Find all the new Ubuntu release tags.
#
"$here/mainline-config" config-list | \
while read series source repo tag_prefix
do
	git ls-remote --refs "$repo" "$tag_prefix-[0-9]*" | sed -e 's@.*/@@' | \
	while read tag
	do
		version=$(echo "$tag" | sed -e "s/^$tag_prefix-//" -e 's/_/~/')
		echo "$series $source $version $tag"
	done
done | sort -k1,1 -k2,2 -k3,3V >"$tags_list.new"

count=$(wc -l <"$tags_list.new")
if [ "$count" -eq 0 ]; then
	echo "$P: empty tags list ignored." 1>&2
	exit 1
fi

# First run is the base line.
if [ ! -f "$tags_list" ]; then
	echo "$P: first run ever using current as a baseline." 1>&2
	mv "$tags_list.new" "$tags_list"
	exit 0
fi

diff "$tags_list" "$tags_list.new" | \
	egrep '^>' | tac | head -100 >"$tags_list.added"

echo "v--- new entries (limited to 100)"
cat "$tags_list.added"
echo "^---"

# Commit the list.
sed 's/^> *//' "$tags_list.added" >>"$tags_list"
sort -k1,1 -k2,2 -k3,3V "$tags_list" >"$tags_list.new"
mv "$tags_list.new" "$tags_list"

# Run the list.
while read added series package package_ver ubuntu_ver
do
	[ "$ubuntu_ver" = 'UNKNOWN' ] && continue

	# ESM kernels are represented without the /esm suffix in a chroot/lib-build
	# context, strip it off.
	series="${series%/esm}"
	"$here/cod-enqueue" "cod-ubuntu-config" "$series" "$package" "$package_ver" "$ubuntu_ver"
done <"$tags_list.added"

rm -f "$tags_list.added"
