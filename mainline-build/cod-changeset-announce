#!/usr/bin/python2
from __future__                         import print_function
import smtplib
import sys
import os
from ktl.announce                       import Announce

build = sys.argv[1]
reason = sys.argv[2]

summary = os.path.join(build, 'SUMMARY')

(build, commit) = os.path.basename(build).split('--')

params = {
    'build':    build,
    'commit':   commit,
    'reason':   reason,
}

status = []
overall_status = 'succeeded'
with open(summary) as bfd:
    for line in bfd:
        args = line.strip().split()
        if args[0] == 'Status:':
            if int(args[2]) != 0:
                overall_status = 'failed'
                state = 'failed'
            else:
                state = 'good'
            status.append(args[1] + ' ' + state + ' (rc=' + str(args[2]) + ')')

        elif args[0] == 'Series:':
            params['series'] = args[1]

        elif args[0] == 'Package:':
            params['package'] = args[1]

        elif args[0] == 'Id:':
            params['id'] = args[1]

params['status'] = status
params['overall_status'] = overall_status
params['long_url'] = "http://kernel.ubuntu.com/~kernel-ppa/test-build/{series}/{package}/{id}--{commit}".format(**params).replace('#', '%23')
params['url'] = "http://kernel.ubuntu.com/~kernel-ppa/test-build/{series}/{package}".format(**params).replace('#', '%23')

summary = "changeset build: {series} {package} {id} {reason} complete {overall_status} {url}".format(**params)
subject = "Changeset Build {series} {package} {id} {reason} complete {overall_status}".format(**params)
body  = """The changeset {reason} for {series} {package} is now complete ({overall_status}) and available\r
at the URL below:\r
\r
    {long_url}\r
\r
Overall status for {series} {package} is available at the URL below:
\r
    {url}\r
\r
Kernel Team\r
""".format(**params)

announce = Announce()
announce.send('cod-changeset-' + reason, subject=subject, body=body, summary=summary)
