#!/usr/bin/python3
from __future__ import print_function

import sys

from ktl.kernel_series import KernelSeries

kernel_series = KernelSeries()

# Commands: primary
cmd = sys.argv[1]

urls_seen = {}
for series in sorted(kernel_series.series, key=KernelSeries.key_series_name):
    if not series.opening_ready('autopkgtest', 'britney'):
        continue
    if not series.supported and not series.development:
        continue
    # ADT cannot see ESM binaries to test them.
    if series.esm:
        continue

    flags = 'devel' if series.development else '-'
    for source in sorted(series.sources, key=lambda x: x.name):
        if not source.supported and not source.development:
            continue
        if source.private:
            continue

        # Find the matching package for this source.
        primary = None
        meta = None
        for package in source.packages:
            if package.type in (None, 'main'):
                primary = package
            elif package.type == 'meta':
                meta = package

        if cmd == 'primary' and primary and meta:
            print("{series} {package} - {flags}".format(series=series.codename, package=meta.name, flags=flags))
